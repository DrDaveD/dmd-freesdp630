.\"       Copyright (c) 1989 AT&T   
.\"       All Rights Reserved       
.\"
.\"       THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T   
.\"       The copyright notice above does not evidence any     
.\"       actual or intended publication of such source code.  
.\"
.\"
.TH T_RCV 3N "630 Network Development Package" "\&"
.SH NAME
t_rcv \- receive data or expedited data sent over a connection
.SH SYNOPSIS
.B int t_rcv (fd, buf, nbytes, flags)
.br
.B int fd;
.br
.B char *buf;
.br
.B unsigned int nbytes;
.br
.B int *flags;
.SH DESCRIPTION
This function receives either normal or expedited data.
.I fd
identifies the local transport endpoint through which data will arrive,
.I buf
points to a receive buffer where user data will be placed, and
.I nbytes
specifies the size of the receive buffer.
.I flags
may be set on return from
.I t_rcv
and specifies optional flags as described below.
.PP
By default,
.I t_rcv
operates in synchronous mode and will
wait for data to arrive if none is currently available.
However, if
\s-1O_NDELAY\s0
is set (via
.I t_open
or
.IR fcntl ),
.I t_rcv
will execute in asynchronous mode and will 
fail if no data is available.
(See \s-1TNODATA\s+1 below.)
.PP
On return from the call,
if \s-1T_MORE\s+1 is set in
.I flags
this indicates that there is more data and the current
transport service data unit (\s-1TSDU\s+1) or expedited transport
service data unit (\s-1ETSDU\s+1)
must be received in multiple
.I t_rcv
calls.
Each
.I t_rcv
with the \s-1T_MORE\s+1 flag set indicates that another
.I t_rcv
must follow immediately to get more data for the current \s-1TSDU\s+1.
The end of the \s-1TSDU\s+1 is identified by the return of a
.I t_rcv
call with the \s-1T_MORE\s+1 flag not set.
If the transport provider does not support the concept of a \s-1TSDU\s+1
as indicated in the
.I info
argument on return from
.I t_open
or
.IR t_getinfo ,
the
.SM T_MORE
flag is not meaningful and should be ignored.
.PP
On return, the data returned is expedited data
if \s-1T_EXPEDITED\s+1 is set in \f2flags\f1.
If the number of bytes of expedited data exceeds
.IR nbytes ,
.I t_rcv
will set \s-1T_EXPEDITED\s0 and \s-1T_MORE\s0 on return from the initial call.
Subsequent calls to retrieve the remaining \s-1ETSDU\s+1 will have
\s-1T_EXPEDITED\s0 set on return.
The end of the \s-1ETSDU\s+1 is identified by the return of a
\f2t_rcv\f1 call with the \s-1T_MORE\s+1 flag not set.
.P
If expedited data arrives after part of a \s-1TSDU\s+1 has
been retrieved, receipt of the remainder of the \s-1TSDU\s+1
will be suspended until the \s-1ETSDU\s+1 has been processed.
Only after the full \s-1ETSDU\s+1 has been retrieved (\s-1T_MORE\s+1 not set)
will the remainder of the \s-1TSDU\s+1 be available to the user.
.P
On failure, \f2t_errno\f1 may be set to one of the following:
.TP 19
\s-1[TBADF]\s+1
The specified file descriptor does not refer to a transport endpoint.
.TP
\s-1[TNODATA]\s+1
\s-1O_NDELAY\s0
was set, but
no data is currently available from the transport provider.
.TP
\s-1[TLOOK]\s+1
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.TP
\s-1[TNOTSUPPORT]\s+1
This function is not supported by the underlying transport
provider.
.TP
\s-1[TSYSERR]\s+1
A system error has occurred during execution of this function.
.SH SEE ALSO
fcntl(3N), t_open(3N), t_snd(3N).
.SH DIAGNOSTICS
On successful completion,
.I t_rcv
returns the number of bytes received, and it
returns \-1 on failure and
.I t_errno
is set to indicate the error.
.Ee
