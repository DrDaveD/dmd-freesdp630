.\"       Copyright (c) 1989 AT&T   
.\"       All Rights Reserved       
.\"
.\"       THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T   
.\"       The copyright notice above does not evidence any     
.\"       actual or intended publication of such source code.  
.\"
.\"
.TH T_GETINFO 3N "630 Network Development Package" "\&"
.SH NAME
t_getinfo \- get protocol-specific service information
.SH SYNOPSIS
.B #include <dmdtiuser.h>
.PP
.B int t_getinfo(fd, info)
.br
.B int fd;
.br
.B struct t_info *info;
.SH DESCRIPTION
This function returns the current characteristics of the underlying
transport protocol associated with file descriptor
.IR fd .
The
.I info
structure is used to return the same information returned by
.IR t_open .
This function enables a transport user to access this
information during any phase of communication.
.PP
This argument points to a \f2t_info\f1 structure which contains the following
members:
.PP
long addr;	/* max size of the transport protocol address */
.br
long options;	/* max number of bytes of protocol-specific options */
.br
long tsdu;	/* max size of a transport service data unit (\s-1TSDU\s+1) */
.br
.nf
long etsdu;	/* max size of an expedited transport service data unit (\s-1ETSDU\s+1) */
.br
long connect;	/* max amount of data allowed on connection establishment functions */
.br
long discon;	/* max amount of data allowed on \f2t_snddis\f1 and \f2t_rcvdis\f1 functions */
.br
.fi
long servtype;	/* service type supported by the transport provider */
.PP
The values of the fields have the following meanings:
.TP 14
\f2addr\f1
A value greater than or equal to zero indicates the maximum
size of a transport protocol address; a value of \-1 specifies
that there is no limit on the address size; and a value of \-2
specifies that the transport provider does not provide user
access to transport protocol addresses.
.TP
\f2options\f1
A value greater than or equal to zero indicates the maximum
number of bytes of protocol-specific options supported by the
provider; a value of \-1 specifies that there is no limit on the
option size; and a value of \-2 specifies that the transport provider
does not support user-settable options.
.TP
\f2tsdu\f1
A value greater than zero specifies
the maximum size of a transport service
data unit (\s-1TSDU\s+1);
a value of zero specifies that the
transport provider does not support the concept of
\s-1TSDU\s+1,
although it does support the sending of a data stream with no
logical boundaries preserved across a connection;
a value of \-1 specifies that there is no limit on the size of a
\s-1TSDU\s+1;
and a value of \-2 specifies that the transfer of normal data is
not supported by the transport provider.
.TP
\f2etsdu\f1
A value greater than zero specifies
the maximum size of an expedited transport
service data unit (\s-1ETSDU\s+1);
a value of zero specifies that the
transport provider does not support the concept of \s-1ETSDU\s+1,
although it does support the sending of an expedited data stream with no
logical boundaries preserved across a connection;
a value of \-1 specifies that there is no limit on the size of an
\s-1ETSDU\s+1;
and a value of \-2 specifies that the transfer of expedited data is
not supported by the transport provider.
.TP
\f2connect\f1
A value greater than or equal to zero specifies
the maximum amount of data that may be associated with
connection establishment functions;
a value of \-1 specifies that there is no limit on the amount of data
sent during connection establishment;
and a value of \-2 specifies that the transport provider does not
allow data to be sent with connection establishment functions.
.TP
\f2discon\f1
A value greater than or equal to zero specifies
the maximum amount of data that may be associated with the
.I t_snddis
and
.I t_rcvdis
functions;
a value of \-1 specifies that there is no limit on the amount of data
sent with these abortive release functions;
and a value of \-2 specifies that the transport provider does not
allow data to be sent with the abortive release functions.
.TP
\f2servtype\f1
This field specifies the service type supported by the transport provider,
as described below.
.LE
.PP
If a transport user is concerned with protocol independence, the above
sizes may be accessed to determine how large the buffers must be
to hold each piece of information.
Alternatively, the
.I t_alloc
function may be used to allocate these
buffers.
An error will result if a transport user exceeds the allowed
data size on any function.
The value of each field may change as a result of option negotiation,
and \f2t_getinfo\f1 enables a user to retrieve the current characteristics.
.PP
The
.I servtype
field of
.I info
may specify one of the following values on return:
.TP 15
\s-1T_COTS\s+1
The transport provider supports a connection-mode service but
does not support the optional orderly release facility.
.TP
\s-1T_COTS_ORD\s+1
The transport provider supports a connection-mode service with
the optional orderly release facility.
.TP
\s-1T_CLTS\s+1
The transport provider supports a connectionless-mode service.
For this service type,
.I t_open
will return \-2 for
.IR etsdu ,
.IR connect ,
and
.IR discon .
.P
On failure, \f2t_errno\f1 may be set to one of the following:
.TP 15
\s-1[TBADF]\s+1
The specified file descriptor does not refer to a transport
endpoint.
.TP
\s-1[TSYSERR]\s+1
A system error has occurred during execution of this function.
.SH SEE ALSO
t_open(3N).
.SH DIAGNOSTICS
.I t_getinfo
returns 0 on success and \-1 on failure and
\f2t_errno\f1 is set to indicate the error.
.Ee
