.\"       Copyright (c) 1989 AT&T   
.\"       All Rights Reserved       
.\"
.\"       THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T   
.\"       The copyright notice above does not evidence any     
.\"       actual or intended publication of such source code.  
.\"
.\"
.TH T_ACCEPT 3N "630 Network Development Package" "\&"
.SH NAME
t_accept \- accept a connect request
.SH SYNOPSIS
.B #include <dmdtiuser.h>
.PP
.B int t_accept(fd, resfd, call)
.br
.B int fd;
.br
.B int resfd;
.br
.B struct t_call *call;
.SH DESCRIPTION
This function is issued by a transport user
to accept a connect request.
\f2fd\f1
identifies the local transport endpoint where the connect
indication arrived,
\f2resfd\f1
specifies the local transport endpoint
where the connection is to be established,
and
\f2call\f1
contains information required by the transport provider to complete the connection.
.I call
points to a \f2t_call\f1 structure which contains the following members:
.PP
.RS
struct netbuf addr;
.br
struct netbuf opt;
.br
struct netbuf udata;
.br
int sequence;
.RE
.PP
\f2netbuf\f1 is described in \f2intro\f1(3N).
In \f2call\f1, \f2addr\f1 is the address of the caller, \f2opt\f1
indicates any protocol-specific parameters associated with the connection,
\f2udata\f1
points to any user data to be returned to the caller, and
\f2sequence\f1
is the value returned by
.I t_listen
that uniquely associates the response with a
previously received connect indication.
.PP
A transport user may accept a connection on either the same, or on a different, local transport endpoint than the one on which the connect indication arrived.
If the same endpoint is specified (i.e., \f2resfd\f1=\f2fd\f1),
the connection can be accepted unless the following condition is true:
The user has received other indications on that endpoint but has not responded to them (with
.I t_accept
or
.IR t_snddis ).
For this condition,
.I t_accept
will fail and set \f2t_errno\f1 to \s-1TBADF\s0.
.PP
If a different transport endpoint is specified (\f2resfd\f1!=\f2fd\f1),
the endpoint must be bound to a protocol address and must be
in the \s-1T_IDLE\s+1 state [see \f2t_getstate\f1(3N)] before the
\f2t_accept\f1 is issued.
.PP
For both types of endpoints,
.I t_accept
will fail and set
.I t_errno
to \s-1TLOOK\s+1
if there are indications (e.g., a connect or disconnect) waiting to be received on that endpoint.
.PP
The values of parameters specified by
\f2opt\f1
and the syntax of those values are protocol specific.
The
\f2udata\f1
argument enables the called transport user to send user data to the
caller and
the amount of user data must not exceed the limits supported by
the transport provider as returned by
\f2t_open\f1
or
\f2t_getinfo\f1.
If the \f2len\f1 [see \f2netbuf\f1 in \f2intro\f1(3N)] field of \f2udata\f1 is zero,
no data will be sent to the caller.
.P
On failure,
.I t_errno
may be set to one of the following:
.TP 19
\s-1[TBADF]\s+1
The specified file descriptor does not refer to a transport endpoint,
or the user is illegally accepting a connection on the same
transport endpoint on which the connect indication arrived.
.TP
\s-1[TOUTSTATE]\s+1
The function was issued in the wrong sequence on the transport endpoint referenced by \f2fd\f1,
or the transport endpoint referred to by \f2resfd\f1 is not in the \s-1T_IDLE\s0 state.
.TP
\s-1[TACCES]\s+1
The user does not have permission to accept a connection on the responding
transport endpoint or use the specified options.
.TP
\s-1[TBADOPT]\s+1
The specified options were in an incorrect format or contained illegal
information.
.TP
\s-1[TBADDATA]\s+1
The amount of user data specified was not within the bounds allowed by
the transport provider.
.TP
\s-1[TBADSEQ]\s+1
An invalid sequence number was specified.
.TP
\s-1[TLOOK]\s+1
An asynchronous event has occurred on the transport endpoint referenced by \f2fd\f1 and requires
immediate attention.
.TP
\s-1[TNOTSUPPORT]\s+1
This function is not supported by the underlying transport
provider.
.TP
\s-1[TSYSERR]\s+1
A system error has occurred during execution of this function.
.SH SEE ALSO
intro(3N),
t_connect(3N),
t_getstate(3N),
t_listen(3N),
t_open(3N),
t_rcvconnect(3N).
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f2t_errno\f1 is set to indicate the error.
.Ee
