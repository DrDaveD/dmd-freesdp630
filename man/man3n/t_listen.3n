.\"       Copyright (c) 1989 AT&T   
.\"       All Rights Reserved       
.\"
.\"       THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T   
.\"       The copyright notice above does not evidence any     
.\"       actual or intended publication of such source code.  
.\"
.\"
.TH T_LISTEN 3N "630 Network Development Package" "\&"
.SH NAME
t_listen \- listen for a connect request
.SH SYNOPSIS
.B #include <dmdtiuser.h>
.PP
.B int t_listen(fd, call)
.br
.B int fd;
.br
.B struct t_call \(**call;
.SH DESCRIPTION
This function listens for a
connect request from a calling transport user.
.I fd
identifies the local transport endpoint where connect
indications arrive,
and on return,
.I call
contains information describing the connect indication.
\f2call\f1
points to a \f2t_call\f1 structure which contains the following members:
.PP
.RS
struct netbuf addr;
.br
truct netbuf opt;
.br
struct netbuf udata;
.br
int sequence;
.RE
.PP
\f2netbuf\f1 is described in \f2intro\f1(3N).
In
.IR call ,
.I addr
returns the protocol address of the calling transport user,
.I opt
returns protocol-specific parameters
associated with the connect request,
.I udata
returns any user data sent by the caller on the connect request, and
.I sequence
is a number that uniquely identifies the returned connect
indication.
The value of
.I sequence
enables the user to listen for multiple connect indications
before responding to any of them.
.PP
Since this function returns values for the
.IR addr ,
.IR opt ,
and
.I udata
fields of
.IR call ,
the
.I maxlen
[see \f2netbuf\f1 in \f2intro\f1(3N)] field of each must be set before issuing the
.I t_listen
to indicate the maximum size of the buffer for each.
.PP
By default,
.I t_listen
executes in synchronous mode and
waits for a connect indication to arrive before returning to the user.
However, if
\s-1O_NDELAY\s0
is set (via
.I t_open
or
.IR fcntl ),
.I t_listen
executes asynchronously, reducing
to a poll for existing connect indications.
If none are available, it returns \-1 and sets
.I t_errno
to \s-1TNODATA\s+1.
.P
On failure, \f2t_errno\f1 may be set to one of the following:
.TP 20
\s-1[TBADF]\s+1
The specified file descriptor does not refer to a transport endpoint.
.TP
\s-1[TBUFOVFLW]\s+1
The number of bytes allocated for an incoming argument is not
sufficient to store the value of that argument.
The provider's state, as seen by the user, changes to
\s-1T_INCON\s+1, and
the connect indication information to be returned in
.I call
is discarded.
.TP
\s-1[TNODATA]\s+1
\s-1O_NDELAY\s0
was set, but no connect indications had been queued.
.TP
\s-1[TLOOK]\s+1
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.TP
\s-1[TNOTSUPPORT]\s+1
This function is not supported by the underlying transport
provider.
.TP
\s-1[TSYSERR]\s+1
A system error has occurred during execution of this function.
.SH CAVEATS
If a user issues
.I t_listen
in synchronous mode on a transport endpoint that was not
bound for listening (i.e. \f2qlen\f1 was zero on
.IR t_bind ),
the call will wait forever because
no connect indications will arrive on that endpoint.
.SH SEE ALSO
intro(3N),
fcntl(3N),
t_accept(3N),
t_bind(3N),
t_connect(3N),
t_open(3N),
t_rcvconnect(3N).
.SH DIAGNOSTICS
.I t_listen
returns 0 on success and \-1 on failure and
\f2t_errno\f1 is set to indicate the error.
.Ee
